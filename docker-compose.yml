version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://996ers_user:${POSTGRES_PASSWORD:-secure_password}@db:5432/996ers
      - ORIGIN=${ORIGIN:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - 996ers-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=996ers
      - POSTGRES_USER=996ers_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U 996ers_user -d 996ers"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - 996ers-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - 996ers-network

volumes:
  postgres_data:
    driver: local

networks:
  996ers-network:
    driver: bridge
